{"version":3,"sources":["components/layouts/Sidebar.js","components/utils/helpers.js","components/utils/Map.js","components/utils/MapErrorBoundary.js","components/dashboard/DashboardHeader.js","components/dashboard/Dashboard.js","components/contact/Address.js","components/contact/ContactHeader.js","components/contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","className","to","src","alt","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","cx","cy","r","validateEmail","email","test","String","toLowerCase","getLocation","showPosition","a","navigator","geolocation","getCurrentPosition","alert","MyMapComponent","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","position","isMarkerShown","MapErrorBoundary","state","hasError","error","errorInfo","this","children","React","Component","DashboardHeader","type","data-v-75419b40","data-v-aa799a9e","x1","y1","x2","y2","Dashboard","useState","data","setData","lat","setLat","lng","setLong","coords","latitude","longitude","deleteContact","target","newData","filter","_data","id","localStorage","setItem","JSON","stringify","useEffect","localData","parse","getItem","length","map","index","name","phone","address","long","onClick","googleMapURL","loadingElement","style","containerElement","mapElement","Address","tags","setTag","value","onChange","tagsDetails","inputProps","placeholder","ContactHeader","withRouter","setName","setEmail","setPhone","setAddress","loading","setLoading","nameError","setNameError","emailError","setEmailError","phoneError","setPhoneError","addressError","setAddressError","validateDetails","valid","handleSubmit","e","preventDefault","obj","Date","now","history","push","onSubmit","htmlFor","aria-describedby","disabled","role","aria-hidden","App","exact","path","component","Contact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.99224563.chunk.js","sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\nimport \"./Sidebar.css\";\nimport \"./Navbar.css\";\nconst logo =\n  \"https://pixinvent.com/demo/vuexy-vuejs-admin-dashboard-template/demo-1/img/logo.36f34a9f.svg\";\nconst Sidebar = () => {\n  return (\n    <nav className=\"col-md-2 side-bar\">\n      <div className=\"sidebar-sticky\">\n        <Link className=\"logo-link\" to=\"/dashboard\">\n          <span className=\"img-wrap\">\n            <img src={logo} alt=\"Company Logos\" />\n          </span>\n          <h5 className=\"logo-text\">Nonso</h5>\n        </Link>\n        <ul className=\" list-wrap flex-row-sm\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/dashboard\">\n              <span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"10px\"\n                  height=\"14px\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-home\"\n                >\n                  <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                  <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n                </svg>\n              </span>{\" \"}\n              <span>Dashboard</span>\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/contact\">\n              <span>\n                {\" \"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"10px\"\n                  height=\"14px\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-user\"\n                >\n                  <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                  <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                </svg>\n              </span>{\" \"}\n              <span>Add Contact</span>\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Sidebar;\n","export const validateEmail = (email) => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nexport const getLocation = async (showPosition) => {\n  if (navigator.geolocation) {\n    await navigator.geolocation.getCurrentPosition(showPosition);\n  } else {\n   alert(\"Geolocation is not supported by this browser.\");\n  }\n};","import {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\n\n\nconst MyMapComponent = withScriptjs(\n  withGoogleMap((props) => (\n    <GoogleMap defaultZoom={10} defaultCenter={props.position}>\n      {props.isMarkerShown && (\n        <Marker position={props.position} />\n      )}\n    </GoogleMap>\n  ))\n);\n\nexport default MyMapComponent;\n","import React from \"react\";\nclass MapErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1 className=\"text-center\">Map Could not be loaded</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default MapErrorBoundary;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DashboardHeader = () => {\n  return (\n    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\n      <h1 className=\"h2\">Dashboard</h1>\n      <Link type=\"button\" className=\"btn btn-primary\" to=\"/contact\">\n        <span>\n          <svg\n            data-v-75419b40=\"\"\n            data-v-aa799a9e=\"\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14px\"\n            height=\"14px\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"mr-25 feather feather-plus\"\n          >\n            <line\n              data-v-75419b40=\"\"\n              data-v-aa799a9e=\"\"\n              x1=\"12\"\n              y1=\"5\"\n              x2=\"12\"\n              y2=\"19\"\n            ></line>\n            <line\n              data-v-75419b40=\"\"\n              data-v-aa799a9e=\"\"\n              x1=\"5\"\n              y1=\"12\"\n              x2=\"19\"\n              y2=\"12\"\n            ></line>\n          </svg>\n        </span>\n        Create new contact\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardHeader;\n","import { useEffect, useState } from \"react\";\nimport { getLocation } from \"../utils/helpers\";\nimport MyMapComponent from \"../utils/Map\";\nimport MapErrorBoundary from \"../utils/MapErrorBoundary\";\nimport DashboardHeader from \"./DashboardHeader\";\n\nconst Dashboard = () => {\n    const [data, setData] = useState([]);\n    const [lat, setLat] = useState(\"\");\n    const [lng, setLong] = useState(\"\");\n    const showPosition = (position) => {\n      if (position) {\n        let { latitude, longitude } = position.coords;\n        setLat(latitude);\n        setLong(longitude);\n      }\n    };\n    const deleteContact = ({target}) =>{\n      let newData = data.filter(_data => +_data.id !== +target.id);\n      setData(newData)\n      localStorage.setItem(\"contacts\", JSON.stringify(newData));\n    }\n    useEffect(() => {\n      showPosition();\n      getLocation(showPosition);\n      let localData = JSON.parse(localStorage.getItem(\"contacts\"));\n      localData && localData.length !== 0 ? setData(localData) : setData([]);\n    }, []);\n  return (\n    <div className=\"main-content\">\n      <DashboardHeader />\n      <div className=\"table-responsive\">\n        <table className=\"table table-striped \">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Phone</th>\n              <th>Address</th>\n              <th>Longitude</th>\n              <th>Latitude</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data && data.length > 0 ? (\n              data.map((_data, index) => {\n                let { id, name, email, phone, address, lat, long } = _data;\n                return (\n                  <tr key={id}>\n                    <td>{index + 1}</td>\n                    <td>{id}</td>\n                    <td>{name}</td>\n                    <td>{email}</td>\n                    <td>{phone}</td>\n                    <td>{address}</td>\n                    <td>{lat}</td>\n                    <td >{long}</td>\n                    <td id={id} className='pointer' onClick={deleteContact}>\n                      <span id={id}>\n                      <svg id={id}\n                    \n                     \n\n                                               xmlns=\"http://www.w3.org/2000/svg\"\n\n                                               width=\"14px\"\n\n                                               height=\"14px\"\n                       \n                        viewBox=\"0 0 24 24\"\n                       \n                        fill=\"none\"\n                       \n                        stroke=\"currentColor\"\n                      \n                         strokeWidth=\"2\"\n\n                                               strokeLinecap=\"round\"\n\n                                               strokeLinejoin=\"round\"\n\n                                               className=\"mr-50 feather feather-trash\"\n                      \n                      >\n                        \n                        <polyline points=\"3 6 5 6 21 6\"></polyline>\n                        \n                        <path id={id} d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                      \n                      </svg>\n                    \n                      </span>\n                     \n                    </td>\n                  </tr>\n                );\n              })\n            ) : (\n              <tr className=\"text-center\">Contact details is empty</tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"map-box\">\n        <MapErrorBoundary>\n          <MyMapComponent\n            isMarkerShown\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            position={lat && lng ? { lat, lng } : { lat: 6.5244, lng: 3.3792 }}\n          />\n        </MapErrorBoundary>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import TagsInput from \"react-tagsinput\";\nimport React, { useState } from \"react\";\n\nimport \"react-tagsinput/react-tagsinput.css\"; // If using WebPack and style-loader.\n\nconst Address = (props) => {\n  const [tags, setTag] = useState([]);\n  const handleChangec = (tags) => {\n    setTag(tags);\n    props.tagsDetails(tags);\n  };\n  return (\n    <>\n      <TagsInput\n        value={tags}\n        onChange={handleChangec}\n        inputProps={{ placeholder: \"Your address\", className: \"form-control\" }}\n      />\n    </>\n  );\n};\n\nexport default Address;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./contacts.css\";\n\nconst ContactHeader = () => {\n  return (\n    <div className=\"contact-header flex-wrap flex-md-nowrap  pb-2 mb-3 border-bottom\">\n      <h1 className=\"h2\">Add contact</h1>\n      <Link type=\"button\" className=\"btn btn-primary\" to=\"/dashboard\">\n        <span>\n          {\" \"}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14px\"\n            height=\"14px\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-eye\"\n          >\n            <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n            <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n          </svg>\n        </span>\n        <span> View contact(s) </span>\n      </Link>\n    </div>\n  );\n};\n\nexport default ContactHeader;\n","import { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {  getLocation, validateEmail } from \"../utils/helpers\";\nimport Address from \"./Address\";\nimport ContactHeader from \"./ContactHeader\";\n\nconst Contact = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n  const [addressError, setAddressError] = useState(false);\n\n  const validateDetails = () => {\n      let valid = true\n    if (name === \"\")  { \n        setLoading(false); \n        setNameError(true)\n        valid =  false\n    }\n    if (email === \"\" || !validateEmail(email)) {\n      setLoading(false);\n      setEmailError(true);\n      valid =  false\n    }\n    if (phone === \"\") {\n      setLoading(false);\n      setPhoneError(true);\n      valid =  false\n    }\n    if (address.length === 0) {\n      setLoading(false);\n      setAddressError(true);\n      valid =  false\n    }\n    return valid;\n  };\n\n  const handleSubmit = async (e) => {\n    setLoading(true);\n    e.preventDefault();\n    validateDetails();\n    if ( validateDetails()) {\n      const obj = {id: Date.now(), name, email, phone, address, lat, long };\n\n      if (data.length > 0) {\n        let newData = [...data, obj];\n        localStorage.setItem(\"contacts\", JSON.stringify(newData));\n        props.history.push(\"/dashboard\");\n      } else {\n        localStorage.setItem(\"contacts\", JSON.stringify([obj]));\n        props.history.push(\"/dashboard\");\n      }\n    }\n  };\n\n  \n  const showPosition =(position) => {\n      if(position){\n          let {latitude, longitude} = position.coords\n          setLat(latitude)\n          setLong(longitude)\n      }\n  }\n  const addressTags = (tags) => {\n    setAddress(tags);\n  };\n  useEffect(() => {\n    showPosition()\n    getLocation(showPosition)\n      let localData =JSON.parse( localStorage.getItem(\"contacts\"));\n    localData && localData.length !== 0 ? setData(localData) : setData([])\n  }, [])\n  return (\n    <div className=\"main-content\">\n      <ContactHeader />\n      <div className=\"form-container mb-3\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              aria-describedby=\"name\"\n              placeholder=\"Your Name\"\n              value={name}\n              onChange={({ target }) => {\n                setName(target.value);\n              }}\n            />\n            {nameError && name.length < 2 && (\n              <small id=\"nameError\" className=\"form-text text-danger\">\n                Name can not be empty & must be 2 digits or more\n              </small>\n            )}\n          </div>\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              value={email}\n              placeholder=\"Your email\"\n              onChange={({ target }) => {\n                setEmail(target.value);\n              }}\n            />\n            {emailError && !validateEmail(email) && (\n              <small id=\"emailError\" className=\"form-text text-danger\">\n                Email must be valid\n              </small>\n            )}\n          </div>\n\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"phone\">Phone  <b>*(Valid 11 digits)</b></label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"phone\"\n              placeholder=\"Your Phone Number\"\n              value={phone}\n              onChange={({ target }) => {\n                setPhone(target.value);\n              }}\n            />\n            {phoneError && phone.length !== 11 && (\n              <small id=\"phoneError\" className=\"form-text text-danger\">\n                Phone number must be valid\n              </small>\n            )}\n          </div>\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"address\">Address <b>*(type your address & enter)</b></label>\n            <Address  tagsDetails={addressTags}/>\n            {addressError && address.length === 0  && (\n              <small id=\"addressError\" className=\"form-text text-danger\">\n                Address can not be empty\n              </small>\n            )}\n          </div>\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"address\">Latitude</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"lat\"\n              placeholder=\"Enter Latitude\"\n              value={lat && lat}\n              disabled\n            />\n          </div>\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"address\">Longitude</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"address\"\n              placeholder=\"Enter Longitude\"\n              value={long && long}\n              disabled\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            <span>Submit</span>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Contact);\n","\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Sidebar from \"./components/layouts/Sidebar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Contact from \"./components/contact/Contact\";\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <Sidebar />\n\n            <main role=\"main\" className=\"col-md-10 main\">\n              <Switch>\n                <Route exact path=\"/dashboard\" component={Dashboard} />\n                <Route exact path=\"/contact\" component={Contact} />\n              </Switch>\n            </main>\n          </div>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker.js\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}